<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBcAAAAAGAAkCQAAFgAAACgAAAAgAAAALgAAAAEAGAAAAAAAoAgAAAAAAAAAAAAAAAAAAAAA
        AADhy8rgxsbfxcXexMPewcLdwMDdv77evbrcu7jcubfbt7XatbPas7HZsa/Zrq3YrKvYqqnWqKfVpqXV
        pKTVoqLVoaDUn57TnZzSm5vSmZnRmJjQl5fRlpbRlJXRlJXRmZngycnfxcXfw8PewcLewMDcvb7cvL3e
        urrcubbbt7TatLLZsrDYsa/XrqzYrKvYqqnXqKfWpqXVo6PUoaHTn5/VnJ3Tm5rSmpnRmJfRlpbQlJTP
        k5PPkZHQkJHRj5DQlJTgysnfxcXfxMTewsLewcHev8Dcvb7cu7zcurjbuLXatrTas7HZsrDYsK7WravY
        q6rXqKfXp6bVpKTUoqLUoKDUnp7UnJvTm5rSmZjRl5bRlZXQlJTPkpLQkZHRj5DQlJThysrgxsbfxcXf
        w8PewsLewMHdvb7cvL3du7ncubbbuLXatbPZs7HZsa/XrqzXrKvYqqnXqKfWpqXVo6PUoaHUn5/VnJ3T
        m5vTmpnRmJfRlpbQlZXQk5PPkZHPkJHRlJXhy8rgxsbgxsbfxMTewsLewcHev8Dcvb7bvLvcurncubbb
        trTatLLZsrDYsK7XrqzYq6rXqajXp6bWpaTVoqLUoKDTnp7UnJzTm5rSmZjQl5bRlZXQlJTPkpLPkZHR
        lZXiy8vhx8fgxsbfxcXfw8PewsLfwMHdvr/bvL3bu7vcubbbuLXbtbPas7HZsa/Yr63YrKvYqqnXqKfW
        pqXVo6PUoaHUoKDUnZ3UnJvTmpnRmJfRlpbRlZXPk5PQkpLQlpbizMvhx8fhx8fgxsbfxMTfw8PewcHe
        v8Dcvb7cvLzcurjcubbat7TatLLZsrDYsK7XrqzYrKrYqajXp6bWpaTUoqLUoaHTnp/UnJzTm5rTmpnR
        l5bRlZXQlJTQkpLQl5bizMviyMjhx8fgxsbfxcXfxMTewsLewMHdvr/cvL3cu7vcurfbuLXbtrPZs7HY
        sa/Yr63YravYq6rXqKfWpqXVpKPUoaHUoKDUnZ7UnJvTm5rRmJfRl5bRlZXQk5PQl5fizMviyMjiyMjh
        x8fgxsbfxcXfw8PewcLev8Dcvb7cvL3du7ncubbbt7TatLLZsrDZsa/XrqzZq6rYqajXp6bWpaXVoqLU
        oaHTn5/TnZzTm5rTmpnRmJfRlpXQlJTRmJjizMvjycniyMjhx8fgxsbgxsbfw8PewsLewMHdvr/cvb7b
        vLvdurfbuLXbtrPas7HZsrDYsK7XravYq6rYqKfXp6bVpKTUoqLUoKDTnp3UnJvTm5rSmZjRl5bRlZXR
        mZjizMviyMjiyMjiyMjhx8fgxsbfxcXfw8PewsLev8Ddvb7cvL3du7rcubbbuLXatbLZsrDYsa/XrqzX
        rKvYqqnXqKfWpqXVo6PUoaHUn5/UnJ3Um5vTmpnRmJfRlpbSmZnizMvjycniyMjiyMjhx8fgxsbgxcXf
        xMTewsLewcHdvr/cvb7cu7zdubjbuLXbtrTas7HZsrDXsK7XrqzYq6rXqajXp6bVpaTUoqLUoKDTnp7U
        nJzTm5rSmZjRl5bRmpnizMviyMjiyMjiyMjiyMjhx8fgxsbgxcXfw8PewsLewMHcvb7cvbzQrazMqKXM
        pqTKpKLOpqTYsa/Yr63YrKvYqqnXqKfWpqXVo6PUoaHUoKDUnZ3UnJvTmpnRmJfQnJvizMvjycnjycnj
        ycniyMjhx8fhx8fgxsbgxMTfw8PewcHVtrXKp6XDn5zJpaLRrKrHoZ7EnZvHnpzRqKbXrqzXrKrYqajX
        p6bVpaTUoqLUoKDTnp/VnJzTm5rSmZjRnZvizMvjycnjycnjycniyMjiyMjhx8fgxsbfxcXfw8PWubjK
        qKfMqqrLqabNqafNqabLpaPHn53Ko6HDmpjRqKbXravYq6rXqKfWpqXVpKPUoaHUoKDTnZ3UnJvTmpnS
        nZzizMviyMjiyMjiyMjiyMjiyMjhx8fhx8fgxsbexMTMranIqKTMq6nXuLfbvL3du7ncubbGn5zJoJ/E
        m5nGnJvXrqzXrKrXqajXp6bWpqXUoqLUoKDTn5/TnJzTm5rTn53izMvjycnjycnjycnjycnjycniyMjh
        x8fgxsbfxcTEpKHTtrK0jozMqqnDn57YtrS5kY+leXi0iojVr63GnZvYr63XravYq6rXqKfXp6bVpKTU
        oqLUoKDTnp7UnJvTn57izMviyMjiyMjiyMjiyMjiyMjiyMjiyMjhx8fdwsK/n5u/npuXammBUE9mLi6I
        WVeccW+UZWOUZGO+lZO6kY/Xr63Xr63YrKvYqqnWqKfWpqXUo6LUoaHTn5/UnJ3UoJ/izMvjycnjycnj
        ycnjycnjycnjycniyMjhx8fgx8bAop/Cop/BoJ1iKSqPYF+4kpCBUE+BUE+tgoDAmJbDmpjZsrDYsK7X
        rqzYq6rXqajWp6bVpKTUoqLUoKDTnp7VoaDizMvjycnjycnjycnjycnjycnjycniyMjiyMjgx8fLravP
        tLDCop+6l5Sle3p7SkqMXVy2jozHoZ/JoqDIoJ7Zs7HYsa/Xr63XrKvYqqnXqKfWpqXVo6PUoaHUoKDU
        oaLizMviyMjiyMjiyMjiyMjiyMjiyMjiyMjiyMjhx8fdxMLHqqbIqaW/npvEo6DFo6DDn53Am5m7lZPD
        nJrZtLLatLLZsrDYsK7XrqzZq6rXqajXp6bWpaTUoqLUoKDUo6TizMvjycnjycnjycnjycnjycnjycnj
        ycnjycniyMjhx8fdxMLMrqy/n5zCn5zOsK2/m5i/mpjLpqTauLXbuLXbtbPZs7HYsa/Yr63XravYqqnX
        qKfWpqXVpKPUoaHUpKXjz87jzMvjzMvjzMvjzMvjzMvjzMvjzMvjzMvizMviy8vhysrgycjfxcTQtLPQ
        srLQsrLcwL/ewL/dvr3dvbrbu7jbubbbt7TatbLasrDYsK/Zrq3YrKvXqqnVqKfWqqoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>